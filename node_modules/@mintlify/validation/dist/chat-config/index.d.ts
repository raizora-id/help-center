import { z } from 'zod';
import { heroSchema, HeroSchema } from './hero.js';
export declare const chatConfigSchema: z.ZodObject<{
    name: z.ZodOptional<z.ZodString>;
    favicon: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
        light: z.ZodString;
        dark: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        light: string;
        dark: string;
    }, {
        light: string;
        dark: string;
    }>]>>;
    logo: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
        light: z.ZodString;
        dark: z.ZodString;
        href: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        light: string;
        dark: string;
        href?: string | undefined;
    }, {
        light: string;
        dark: string;
        href?: string | undefined;
    }>]>>;
    wordmark: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodObject<{
        light: z.ZodString;
        dark: z.ZodString;
        href: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        light: string;
        dark: string;
        href?: string | undefined;
    }, {
        light: string;
        dark: string;
        href?: string | undefined;
    }>]>>;
    hero: z.ZodOptional<z.ZodObject<{
        message: z.ZodOptional<z.ZodString>;
        examples: z.ZodOptional<z.ZodUnion<[z.ZodArray<z.ZodString, "many">, z.ZodArray<z.ZodObject<{
            icon: z.ZodOptional<z.ZodString>;
            title: z.ZodString;
            prompt: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            prompt: string;
            title: string;
            icon?: string | undefined;
        }, {
            prompt: string;
            title: string;
            icon?: string | undefined;
        }>, "many">]>>;
    }, "strip", z.ZodTypeAny, {
        message?: string | undefined;
        examples?: string[] | {
            prompt: string;
            title: string;
            icon?: string | undefined;
        }[] | undefined;
    }, {
        message?: string | undefined;
        examples?: string[] | {
            prompt: string;
            title: string;
            icon?: string | undefined;
        }[] | undefined;
    }>>;
    colors: z.ZodOptional<z.ZodObject<{
        primary: z.ZodString;
        light: z.ZodOptional<z.ZodString>;
        dark: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        primary: string;
        light?: string | undefined;
        dark?: string | undefined;
    }, {
        primary: string;
        light?: string | undefined;
        dark?: string | undefined;
    }>>;
}, "strip", z.ZodTypeAny, {
    name?: string | undefined;
    favicon?: string | {
        light: string;
        dark: string;
    } | undefined;
    logo?: string | {
        light: string;
        dark: string;
        href?: string | undefined;
    } | undefined;
    wordmark?: string | {
        light: string;
        dark: string;
        href?: string | undefined;
    } | undefined;
    hero?: {
        message?: string | undefined;
        examples?: string[] | {
            prompt: string;
            title: string;
            icon?: string | undefined;
        }[] | undefined;
    } | undefined;
    colors?: {
        primary: string;
        light?: string | undefined;
        dark?: string | undefined;
    } | undefined;
}, {
    name?: string | undefined;
    favicon?: string | {
        light: string;
        dark: string;
    } | undefined;
    logo?: string | {
        light: string;
        dark: string;
        href?: string | undefined;
    } | undefined;
    wordmark?: string | {
        light: string;
        dark: string;
        href?: string | undefined;
    } | undefined;
    hero?: {
        message?: string | undefined;
        examples?: string[] | {
            prompt: string;
            title: string;
            icon?: string | undefined;
        }[] | undefined;
    } | undefined;
    colors?: {
        primary: string;
        light?: string | undefined;
        dark?: string | undefined;
    } | undefined;
}>;
export type ChatProjectConfigSchema = z.infer<typeof chatConfigSchema>;
export { heroSchema, type HeroSchema };
